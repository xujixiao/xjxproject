apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
// add plugin
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = '1.0.1'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        /*Aroute配置*/
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }


}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile 'junit:junit:4.12'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.trello.rxlifecycle2:rxlifecycle:+'
    compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
    //图片工具
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    //解决方法数量超过65536
    compile 'com.android.support:multidex:1.0.1'
    // Arouter替换成最新版本, 需要注意的是api
    // 要与compiler匹配使用，均使用最新版可以保证兼容,在app模块中还有配置
    compile 'com.alibaba:arouter-api:1.2.4'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    compile 'com.jcodecraeer:xrecyclerview:1.5.2'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding = "UTF-8"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

group = 'com.xjxtools'
install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId 'com.xjxtools' //自己定义的组名
            artifactId 'baselibrary'

            name 'baselibrary'
            description '工具库'
            url 'https://github.com/xujixiao'
            inceptionYear '2016'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection 'https://github.com/xujixiao'
                url 'https://github.com/xujixiao'

            }
            developers {
                developer {
                    name 'xujixiao'
                    email '1107313740@qq.com'
                }
            }
        }

    }
}

// Bintray

//获取local.propertes的信息
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publish = true
    configurations = ['archives']
    pkg {
        //填入 bintray 上对应的 package 信息
        repo = 'maven'
        name = 'xjxtools'
        vcsUrl = 'https://github.com/xujixiao'
        websiteUrl = 'https://github.com/xujixiao'
        licenses = ['Apache-2.0']
        issueTrackerUrl = 'https://github.com/xujixiao'
        publicDownloadNumbers = true
        version {
            name = '1.0.1'
            desc = '工具库'
            vcsTag = '1.0.1'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
task findConventions << {
    println project.getConvention()
}
//gradlew install
/*gradlew bintrayUpload*/
